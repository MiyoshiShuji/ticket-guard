name: functions-ci-deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'functions/**'
      - '.github/workflows/functions-ci-deploy.yml'
      - 'infra/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'functions/**'
      - '.github/workflows/functions-ci-deploy.yml'
      - 'infra/**'

env:
  PYTHON_VERSION: '3.11'
  FUNCTIONS_DIR: functions

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: '${{ env.FUNCTIONS_DIR }}/requirements.txt'
      - name: Install dependencies
        working-directory: ${{ env.FUNCTIONS_DIR }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        working-directory: ${{ env.FUNCTIONS_DIR }}
        run: pytest -v --maxfail=1

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Azure CLI deploy infra (Bicep)
        run: |
          az deployment group create \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --template-file infra/main.bicep \
            --parameters baseName=${{ secrets.APP_BASENAME }}
      - name: Set function app name output
        id: fa
        run: |
          APP_NAME="${{ secrets.APP_BASENAME }}-func"
          echo "name=$APP_NAME" >> "$GITHUB_OUTPUT"
      - name: Archive Function App package
        run: |
          pushd functions
          zip -r ../function_app.zip . -x "__pycache__/*" "tests/*"
          popd
      - name: Deploy Function App package
        run: |
          az functionapp deployment source config-zip \
            -g ${{ secrets.AZURE_RESOURCE_GROUP }} \
            -n ${{ steps.fa.outputs.name }} \
            --src function_app.zip
      - name: Update SIGNING_SECRET (if provided)
        if: secrets.SIGNING_SECRET != ''
        run: |
          az functionapp config appsettings set \
            -g ${{ secrets.AZURE_RESOURCE_GROUP }} \
            -n ${{ steps.fa.outputs.name }} \
            --settings SIGNING_SECRET=${{ secrets.SIGNING_SECRET }}
